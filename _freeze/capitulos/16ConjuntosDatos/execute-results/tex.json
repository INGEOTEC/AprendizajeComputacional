{
  "hash": "b8a6f7ced4b244295f9b199a2f279595",
  "result": {
    "markdown": "# Conjunto de Datos\n\nEl **objetivo** de este apéndice es listar los conjuntos de datos utilizados en el curso.  \n\n## Paquetes usados {.unnumbered}\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom sklearn.datasets import load_breast_cancer,\\\n                             load_diabetes,\\\n                             load_digits, load_iris,\\\n                             load_wine\nfrom scipy.stats import multivariate_normal\nfrom matplotlib import pylab as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n```\n:::\n\n\n## Problemas Sintéticos\n\nEn esta sección se presentan los problemas sintéticos que corresponden aquellos problemas en los que se conocen todos los parámetros y se usan para mostrar algunas características de los algoritmos.\n\n## Mezcla de Clases\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\np1 = multivariate_normal(mean=[5, 5],\n                         cov=[[4, 0], [0, 2]])\nX_1 = p1.rvs(size=1000)\np2 = multivariate_normal(mean=[1.5, -1.5],\n                         cov=[[2, 1], [1, 3]])\nX_2 = p2.rvs(size=1000)\np3 = multivariate_normal(mean=[12.5, -3.5],\n                         cov=[[2, 3], [3, 7]])\nX_3 = p3.rvs(size=1000)\n```\n:::\n\n\n@fig-gaussian_3classes-app muestra estas tres distribuciones. \n\n::: {.cell execution_count=3}\n\n::: {.cell-output .cell-output-display}\n![Muestras de 3 distribuciones gausianas](16ConjuntosDatos_files/figure-pdf/fig-gaussian_3classes-app-output-1.pdf){#fig-gaussian_3classes-app}\n:::\n:::\n\n\n### Clases Separadas\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nX_1 = multivariate_normal(mean=[5, 5],\n                          cov=[[4, 0], [0, 2]]).rvs(1000)\nX_2 = multivariate_normal(mean=[-5, -10],\n                          cov=[[2, 1], [1, 3]]).rvs(1000)\nX_3 = multivariate_normal(mean=[15, -6],\n                          cov=[[2, 3], [3, 7]]).rvs(1000)\n```\n:::\n\n\nEste problema se muestra en la @fig-gaussian_3classes-app-sep. \n\n::: {.cell execution_count=5}\n\n::: {.cell-output .cell-output-display}\n![Muestras de 3 distribuciones gausianas](16ConjuntosDatos_files/figure-pdf/fig-gaussian_3classes-app-sep-output-1.pdf){#fig-gaussian_3classes-app-sep}\n:::\n:::\n\n\n## Problemas de Clasificación\n\nEn esta sección se listan los problemas de clasificación utilizados durante el curso. \n\n### Breast Cancer Wisconsin\n\nEl conjunto de datos de Breast Cancer Wisconsin se obtiene con el siguiente código. \n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nD, y = load_breast_cancer(return_X_y=True)\n```\n:::\n\n\n### Iris\n\nUn conjunto clásico en problemas de clasificación es el problema del Iris que se encuentra con las siguientes instrucciones.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nD, y = load_iris(return_X_y=True)\n```\n:::\n\n\n### Números\n\nEl conjunto de Digits es un conjunto de clasificación donde se trata de identificar el número escrito en una imagen; este conjunto de datos se descarga utilizando las siguientes instrucciones. \n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nD, y = load_digits(return_X_y=True)\n```\n:::\n\n\n### Vino\n\nEl conjunto de vino es un problema que tiene 3 clases, 178 ejemplos y se encuentra representado en $\\mathbb R^{13};$ este problema se obtiene con las siguientes instrucciones. \n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nD, y = load_wine(return_X_y=True)\n```\n:::\n\n\n## Problemas de Regresión\n\nEn esta sección se listan los problemas de regresión utilizados para ejemplificar los algoritmos y su rendimiento. \n\n### Problema Sintético\n\nEl siguiente ejemplo es un problema de regresión sintético que se forma de la suma de dos funciones trascendentales como se muestra en el siguiente código. \n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nX = np.linspace(-5, 5, 100)\ny = np.sin(X) + 0.3 * np.cos(X * 3.)\n```\n:::\n\n\nLa @fig-regresion-trascendental muestra este problema sintético.\n\n::: {.cell execution_count=11}\n\n::: {.cell-output .cell-output-display}\n![Problema de Regresión](16ConjuntosDatos_files/figure-pdf/fig-regresion-trascendental-output-1.pdf){#fig-regresion-trascendental}\n:::\n:::\n\n\n### Diabetes\n\nEl conjunto de datos Diabetes es un problema que se puederecuperar usando el siguiente código. \n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nD, y = load_diabetes(return_X_y=True)\n```\n:::\n\n\n",
    "supporting": [
      "16ConjuntosDatos_files/figure-pdf"
    ],
    "filters": []
  }
}